During the lecture, we discussed that we can easily sample random numbers from a mixture of normal distributions using
a two-step algorithm. I want to illustrate
that algorithm now using the R software. In this particular example, I'm going to generate 50 observations from
a mixture of two normals. The weights of the
two components are 0.6 and 0.4. The means of the two normals
involved in the mixture are zero for the first one
and five for the second one, and the standard deviations are one and two for each
one of the components. Now, if you remember the algorithm we
discussed in the lecture, that it has two steps. In the first step, we just decide which component generates each one
of the observations, and we can easily do that in
R using the sample command. So we're going to
sample n numbers, in this case 50. Each one of those numbers
can take only two values, one or two, 1-2. We're going to be doing
sampling with replacement, and the probability of
selecting each one of the two numbers is given by
the vector w of weights, and as we defined before. Now that we have defined what component generates each
one of the observations, we can just use that information
to sample to use the rnorm command to
generate, again, 50 values, and this vector mu of cc and the vector sigma of
cc just contains the mean and the standard
deviation associated with each one of
those observations. So let's run this code and explore a little bit
what was done. The vector cc, if you look at it, contains numbers between one and two because I only
have two components, and the vector mu contains
just two numbers, zero and five, that correspond to the means of the two components. If you look at what mu of cc is, this is just another vector of the same length as
cc, in this case 50, and the entries of
that vectors are five where cc was two and
zero where cc is one, and that's because by evaluating
this CC vector into mu, we are just selecting
the entries of mu that correspond to the
components that we looked at. So if you think in terms
of the rnorm function, what this is doing is saying the first random variate that it's going to be
generated by rnorm, the first one is going
to have mean five, the second one mean zero, the third one mean zero, the fourth one mean
five, and so on. Something similar happens
if you do sigma of cc. So now, our vector x contains
those random numbers. You can see that observations that come from
component two that has a larger mean tend to be large in the order
of six or five. So both of these numbers are generated from
the second component, and you can see that here. Numbers that are generated
from this first component just like this and this, that's going to correspond
to the first component, tend to be lower and some cases negative and
some cases positive, but closer to zero than to
five as we would expect. Now, we can represent this graphically by essentially
repeating the plot that we had constructed
before for this mixture and adding the points that
were generated to it. That's what this graph shows. So you can see this is the density of
the mixture of normals. We have already seen it before. What I have done now is to
add the points that have been sampled down here in the graph. We could even slightly improve
this by adding color to those points according to the component that
generated them, and that's very easy to do. Now, you can see that the majority of
the points that are under this first little mountain
are the majority are black, and the majority
of the points that are under this second
little mountain are red. But there is some confusion here in the middle
where the two intercept and there are some observations that could belong to
one place or the other. So it's going to be
a very common phenomenon in mixture models and it's
one that we will be exploring in more detail later.